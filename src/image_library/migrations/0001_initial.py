# Generated by Django 4.1.6 on 2023-02-04 14:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import src.base.services


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("user", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(max_length=1500, verbose_name="Описание"),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to=src.base.services.get_path_upload_image,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png", "jpeg"]
                            ),
                            src.base.services.validate_size_image,
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("likes_count", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="user.authuser",
                    ),
                ),
                (
                    "user_of_likes",
                    models.ManyToManyField(
                        related_name="likes_of_image", to="user.authuser"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FavouriteImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                (
                    "cover",
                    models.ImageField(
                        upload_to=src.base.services.get_path_upload_cover_favourite_image,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png", "jpeg"]
                            ),
                            src.base.services.validate_size_image,
                        ],
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(
                        related_name="image_favourites_lists", to="image_library.image"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favourites_lists",
                        to="user.authuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(max_length=1000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="image_comments",
                        to="image_library.image",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="user.authuser",
                    ),
                ),
            ],
        ),
    ]
